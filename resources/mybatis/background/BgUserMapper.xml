<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="BgUserMapper">

	<sql id="userAddColumns">userName,password,name,rights,roleId,lastLoginTime,lastLoginIp,status,remarks,skin,email,userNumber,phone,modifyTime</sql>
	<sql id="userColumns">userId,userName,password,name,rights,roleId,lastLoginTime,lastLoginIp,status,remarks,skin,email,userNumber,phone,modifyTime</sql>
	<sql id="userRoleColumns">
		u.userId,u.userName,u.password,u.name,u.rights as userRights
		,u.lastLoginTime,u.lastLoginIp,u.status,u.remarks,u.skin,u.email,u.userNumber,u.phone,u.modifyTime
		,r.roleId,r.roleName,r.permissions as rolePermissions
		</sql>
		
	<resultMap type="bgUser" id="$userResultMap">
		<id column="userId" property="userId"/>
		<result column="userName" property="userName"/>
		<result column="password" property="password"/>
		<result column="name" property="name"/>
		<result column="rights" property="rights"/>
		<result column="roleId" property="roleId"/>
		<result column="lastLoginTime" property="lastLoginTime"/>
		<result column="lastLoginIp" property="lastLoginIp"/>
		<result column="status" property="status"/>
		<result column="remarks" property="remarks"/>
		<result column="skin" property="skin"/>
		<result column="email" property="email"/>
		<result column="userNumber" property="userNumber"/>
		<result column="phone" property="phone"/>
		<result column="modifyTime" property="modifyTime"/>
	</resultMap>
	
	<resultMap type="bgUser" id="userRoleResultMap">
		<id column="userId" property="userId"/>
		<result column="userName" property="userName"/>
		<result column="password" property="password"/>
		<result column="name" property="name"/>
		<result column="rights" property="rights"/>
		<result column="roleId" property="roleId"/>
		<result column="lastLoginTime" property="lastLoginTime"/>
		<result column="lastLoginIp" property="lastLoginIp"/>
		<result column="status" property="status"/>
		<result column="remarks" property="remarks"/>
		<result column="skin" property="skin"/>
		<result column="email" property="email"/>
		<result column="userNumber" property="userNumber"/>
		<result column="phone" property="phone"/>
		<result column="modifyTime" property="modifyTime"/>
		<association property="bgRole" column="roleId" javaType="BgRole">
			<id column="roleId" property="roleId"/>
			<result column="roleName" property="roleName"/>
			<result column="rolePermissions" property="permissions"/>
		</association>
	</resultMap>
	
	<!-- ****************************custom * start*********************************** -->
	
	<!-- 换皮肤-->
	<update id="changeSkin" parameterType="pd">
		update bgUser set 
		skin = #{skin} 
		where userName = #{userName}
	</update>
	
	<!-- 存入IP -->
	<update id="changeLoginInfo" parameterType="bgUser">
		update bgUser 
			set 
				lastLoginTime = #{lastLoginTime},
				lastLoginIp = #{lastLoginIp}
			where 
				userName = #{userName}
	</update>
	
	<!-- 通过userName获取数据 -->
	<select id="findByUserName" parameterType="pd" resultType="bgUser">
		select 
			<include refid="userColumns"/>
		from 
			bgUser
		where 
			userName = #{userName}
	</select>
			
	<!-- 通过email获取数据 -->
	<select id="findByEmail" parameterType="pd" resultType="bgUser">
		select 
			<include refid="userColumns"/>
		from 
			bgUser
		where 
			email = #{email}
		<if test="userName != null and userName != ''">
			and userName != #{userName} 
		</if>
	</select>
	
	<!-- 通过userNumber获取数据 -->
	<select id="findByUserNumber" parameterType="pd" resultType="bgUser">
		select 
			<include refid="userColumns"/>
		from 
			bgUser
		where 
			userNumber = #{userNumber}
		<if test="userName != null and userName != ''">
			and userName != #{userName} 
		</if>
	</select>
	
	<!-- 通过phone获取数据 -->
	<select id="findByPhone" parameterType="pd" resultType="bgUser">
		select 
			<include refid="userColumns"/>
		from 
			bgUser
		where 
			phone = #{phone}
		<if test="userName != null and userName != ''">
			and userName != #{userName} 
		</if>
	</select>
	
	<!-- 判断用户名和密码 -->
	<select id="checkUserLogin" parameterType="pd" resultType="bgUser">
	<!-- insert update delete (flushCache="true/false") -->
		select * from bgUser 
		where 1=1
		<if test="userName != null and password != null">
	  	and	(
	  		(userName = #{userName} and password = #{password})
	  		or
	  		(email = #{userName} and password = #{password})
	  		or
	  		(userNumber = #{userName} and password = #{password})
	  		)
		</if>
		<if test="userId != null and userId != ''">
		and userId = #{userId}
		</if>
	</select>
	
	<!-- 通过userId获取数据 -->
	<select id="getUserRoleById" parameterType="int" resultMap="userRoleResultMap">
		select  
			<include refid="userRoleColumns"/> 
		from bgUser u 
		left join bgRole r 
		on u.roleId=r.roleId 
		where u.status=0 
		and u.userId=#{userId}
	</select>
	
	<!-- ****************************custom * end  *********************************** -->
	
	
	<!-- ****************************common * satrt*********************************** -->
	<!-- 新增 -->
	<insert id="add" useGeneratedKeys="true" keyProperty="userId" parameterType="bgUser">
		insert into bgUser ( 
			<include refid="userAddColumns"/>
		) values (
			#{userName},#{password},#{name},#{rights},#{roleId},#{lastLoginTime},#{lastLoginIp},#{status},#{remarks},#{skin},#{email},#{userNumber},#{phone}
		)
	</insert>
	
	<!-- 新增 -->
	<insert id="addByPd" useGeneratedKeys="true" keyProperty="userId" parameterType="pd">
		insert into bgUser ( 
			<include refid="userAddColumns"/>
		) values (
			#{userName},#{password},#{name},#{rights},#{roleId},#{lastLoginTime},#{lastLoginIp},#{status},#{remarks},#{skin},#{email},#{userNumber},#{phone}
		)
	</insert>
	
	<!-- 修改 -->
	<update id="edit" parameterType="bgUser">
		update  bgUser
			set 
				userName = #{userName},
				password = #{password},
				name = #{name},
				rights = #{rights},
				roleId = #{roleId},
				lastLoginTime = #{lastLoginTime},
				lastLoginIp = #{lastLoginIp},
				status = #{status},
				remarks = #{remarks},
				skin = #{skin},
				email = #{email},
				userNumber = #{userNumber},
				phone = #{phone}
			where 
				userId = #{userId}
	</update>
	
	<!-- 修改 -->
	<update id="editByPd" parameterType="pd">
		update  bgUser
			set 
				userName = #{userName},
				password = #{password},
				name = #{name},
				rights = #{rights},
				roleId = #{roleId},
				lastLoginTime = #{lastLoginTime},
				lastLoginIp = #{lastLoginIp},
				status = #{status},
				remarks = #{remarks},
				skin = #{skin},
				email = #{email},
				userNumber = #{userNumber},
				phone = #{phone}
			where 
				userId = #{userId}
	</update>
	
	<!-- 删除 -->
	<delete id="deleteById" parameterType="int">
		delete from bgUser 
		where 
			userId = #{userId}
	</delete>
	
	<!-- 删除 -->
	<delete id="deleteByPd" parameterType="pd">
		delete from bgUser 
		where 
			userId = #{userId}
	</delete>
	
	<!-- 批量删除 -->
	<delete id="batchDeleteByIds" parameterType="String">
		delete from comTable 
		where 
			tableId in (#{ids})
	</delete>
	
	<!-- 通过id获取(类)数据 -->
	<select id="findById" parameterType="int" resultType="bgUser">
		select 
			<include refid="userColumns"/>
		from 
			bgUser
		where 
			userId = #{userId}
	</select>
	
	<!-- 通过id获取(PageData)数据  -->
	<select id="findPdById" parameterType="int" resultType="pd">
		select 
			<include refid="userColumns"/>
		from 
			bgUser
		where 
			userId = #{userId}
	</select>
	
	<!-- 通过pd获取(PageData)数据  -->
	<select id="findPdByPd" parameterType="pd" resultType="pd">
		select 
			<include refid="userColumns"/>
		from 
			bgUser
		where 
			userId = #{userId}
	</select>
	
	<!-- 获取(类)List数据  -->
	<select id="listAllByPd" parameterType="pd" resultMap="$userResultMap">
		select 
			<include refid="userColumns"/>
		from 
			bgUser
	</select>
	
	<!-- 通过id获取(PageData)数据  -->
	<select id="listAllPd" parameterType="bgPage" resultType="pd">
		select 
			<include refid="userColumns"/>
		from 
			bgUser
	</select>
	
	<!-- ****************************common * end  ********************************** -->
	
</mapper>